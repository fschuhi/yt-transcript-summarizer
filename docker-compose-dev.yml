services:
  create_dev_db:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DB}
    volumes:
      - ${PROJECT_DIR}:${PROJECT_DIR}
    working_dir: ${PROJECT_DIR}
    networks:
      - postgres-docker_local-network
    env_file:
      - .env
    command: sh -c "./wait-for-it.sh postgres:5432 -- python utils/bootstrap_db.py --run-migrations False"

  bootstrap_db:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DB}
    volumes:
      - ${PROJECT_DIR}:${PROJECT_DIR}
    working_dir: ${PROJECT_DIR}
    networks:
      - postgres-docker_local-network
    env_file:
      - .env
    command: sh -c "./wait-for-it.sh postgres:5432 -- python utils/bootstrap_db.py"

  alembic_migrate:
    build:
      context: .
      dockerfile: Dockerfile
    command: alembic revision --autogenerate -m "Migration"
      #- alembic upgrade head
    volumes:
      - ${PROJECT_DIR}:${PROJECT_DIR}
    working_dir: ${PROJECT_DIR}
    networks:
      - postgres-docker_local-network
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DB}

  alembic_upgrade:
    build:
      context: .
      dockerfile: Dockerfile
    command: alembic upgrade head
      #- alembic upgrade head
    volumes:
      - ${PROJECT_DIR}:${PROJECT_DIR}
    working_dir: ${PROJECT_DIR}
    networks:
      - postgres-docker_local-network
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DB}

networks:
     postgres-docker_local-network:
       external: true