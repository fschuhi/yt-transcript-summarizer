version: '3'
services:
  frontend:
    build: ./frontend
    ports:
      - "8080:8080"
  
  fastapi:
    build: .
    ports:
      - "8000:8000"

  test:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ${PWD}:${PWD}
    working_dir: ${PWD}
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env.test
    command: bash -c "./wait-for-it.sh postgres:5432 -- pytest"

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./wait-for-it.sh:/wait-for-it.sh
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: your-email@example.com
      PGADMIN_DEFAULT_PASSWORD: your-password
    ports:
      - 8081:80
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres

volumes:
  pgadmin-data:
  postgres-data:
    # Use a different directory for Windows and macOS
    # Windows
#    driver_opts:
#      type: none
#      device: ${PWD}/postgres-data_test
#      o: bind
     #macOS
     driver_opts:
       type: none
       device: ${HOME}/dev/yt-transcript-summarizer/postgres-data_test
       o: bind